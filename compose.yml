# version: "3.8"

services:

  naomi-yolo-client:
    image: namanoo/naomi-yolo-client:v1.0.0
    build: ./client
    container_name: naomi-yolo-client
    stdin_open: true
    tty: true
    restart: always
    networks:
      - app-network
    ports:
      - "3000:80"

  naomi-yolo-backend:
    image: namanoo/naomi-yolo-backend:v1.0.0
    build: ./backend
    container_name: naomi-yolo-backend
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      naomi-yolo-mongodb:
        condition: service_healthy
    
    env_file:
      - .env
    networks:
      - app-network
      - db-network
    ports:
      - "5000:5000"
    
  
  naomi-yolo-mongodb:
    image: mongo:3.0
    container_name: naomi-yolo-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"

    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'db.runCommand({ ping: 1 }).ok' | mongo --quiet localhost:27017/test"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 90s
    volumes:
      - mongo-data:/data/db

    env_file:
      - .env
    networks:
      - db-network
    
    



networks:   
  app-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local